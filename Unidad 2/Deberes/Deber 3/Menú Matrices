#include <stdio.h>
#include <stdlib.h>

// Declaración de funciones
void llenarMatriz(int n, int matriz[n][n], char nombre);
void mostrarMatriz(int n, int matriz[n][n]);
void sumarMatrices(int n, int A[n][n], int B[n][n]);
void restarMatrices(int n, int A[n][n], int B[n][n]);
void multiplicarMatrices(int n, int A[n][n], int B[n][n]);
void elevarAlCuadrado(int n, int matriz[n][n], char nombre);

int main() {
    int n;

    printf("Ingrese el tamaño de las matrices cuadradas (n x n): ");
    scanf("%d", &n);

    int A[n][n], B[n][n];

    printf("\n--- Llenar Matriz A ---\n");
    llenarMatriz(n, A, 'A');

    printf("\n--- Llenar Matriz B ---\n");
    llenarMatriz(n, B, 'B');

    int opcion;
    do {
        printf("\n======= MENU =======\n");
        printf("1. Mostrar matrices\n");
        printf("2. Sumar A + B\n");
        printf("3. Restar A - B\n");
        printf("4. Multiplicar A x B\n");
        printf("5. Elevar al cuadrado una matriz (A o B)\n");
        printf("0. Salir\n");
        printf("Seleccione una opcion: ");
        scanf("%d", &opcion);

        switch(opcion) {
            case 1:
                printf("\nMatriz A:\n");
                mostrarMatriz(n, A);
                printf("\nMatriz B:\n");
                mostrarMatriz(n, B);
                break;
            case 2:
                sumarMatrices(n, A, B);
                break;
            case 3:
                restarMatrices(n, A, B);
                break;
            case 4:
                multiplicarMatrices(n, A, B);
                break;
            case 5:
                printf("¿Qué matriz desea elevar al cuadrado? (A/B): ");
                char eleccion;
                scanf(" %c", &eleccion);
                if (eleccion == 'A' || eleccion == 'a')
                    elevarAlCuadrado(n, A, 'A');
                else if (eleccion == 'B' || eleccion == 'b')
                    elevarAlCuadrado(n, B, 'B');
                else
                    printf("Opción inválida.\n");
                break;
            case 0:
                printf("Saliendo del programa...\n");
                break;
            default:
                printf("Opcion invalida.\n");
        }
    } while (opcion != 0);

    return 0;
}

// Funciones

void llenarMatriz(int n, int matriz[n][n], char nombre) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("Ingrese elemento %c[%d][%d]: ", nombre, i, j);
            scanf("%d", &matriz[i][j]);
        }
    }
}

void mostrarMatriz(int n, int matriz[n][n]) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%4d ", matriz[i][j]);
        }
        printf("\n");
    }
}

void sumarMatrices(int n, int A[n][n], int B[n][n]) {
    int resultado[n][n];
    printf("\nResultado de A + B:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            resultado[i][j] = A[i][j] + B[i][j];
            printf("%4d ", resultado[i][j]);
        }
        printf("\n");
    }
}

void restarMatrices(int n, int A[n][n], int B[n][n]) {
    int resultado[n][n];
    printf("\nResultado de A - B:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            resultado[i][j] = A[i][j] - B[i][j];
            printf("%4d ", resultado[i][j]);
        }
        printf("\n");
    }
}

void multiplicarMatrices(int n, int A[n][n], int B[n][n]) {
    int resultado[n][n];

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            resultado[i][j] = 0;
            for (int k = 0; k < n; k++) {
                resultado[i][j] += A[i][k] * B[k][j];
            }
        }
    }

    printf("\nResultado de A x B:\n");
    mostrarMatriz(n, resultado);
}

void elevarAlCuadrado(int n, int matriz[n][n], char nombre) {
    int resultado[n][n];

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            resultado[i][j] = 0;
            for (int k = 0; k < n; k++) {
                resultado[i][j] += matriz[i][k] * matriz[k][j];
            }
        }
    }

    printf("\nResultado de %c^2:\n", nombre);
    mostrarMatriz(n, resultado);
}
